type Role {
    id: ID!
    name: String
    readonly: Boolean
    childRoles: [Role]
    permissions: [String]
}

type RolePaginated{
    totalDocs: Int
    page: Int
    limit: Int
    items: [Role]
}

type Query{
    paginateRole: RolePaginated
    findRoleById(id: ID): Role
}

input RoleInput{
    name: String
    permissions: [String]
    readonly: Boolean
    childRoles: [ID]
}

type Mutation{
    createRole(input: RoleInput): Role
    updateRole(id: ID!, input: RoleInput): Role
    deleteRole(id: ID!): Boolean
}
